@model IEnumerable<GameSimulationN.Models.Building>

@{
    ViewBag.Title = "Building";
}

<h2>Building</h2>

<p>
    @if (@Model.FirstOrDefault().GoldCoins > 0)
    {
    @Html.ActionLink("Add New Building", "Create", "Building", new { id = Model.FirstOrDefault().CityId }, new { @class = "btn btn-primary", id = "CreateBuld" })
    }
    else
    { @Html.ActionLink("Add New Building", "Create", "Building", new { id = Model.FirstOrDefault().CityId }, new { @class = "btn btn-primary disabled", id = "CreateBuld" })}
</p>
<div class="clearfix">
    <table>
        <tr>
            <td><label class="control-label col-md-1 font-20" for="disabledInput">City: </label></td>
            <td class="col-lg-3"><input class="form-control" id="disabledInput" type="text" placeholder="@Model.FirstOrDefault().CityName" disabled=""></td>
        </tr>
        <tr>
            <td>
                <a href="#" class="btn btn-success" style="text-align:center" id="idCoins">
                    Coins
                    <img src="~/Content/Coins-icon.png" /> <span id="coinCount" class="badge">@Model.FirstOrDefault().GoldCoins</span>
                </a>
            </td>

        </tr>

    </table>
    <input class="form-control" id="cityId" type="hidden" value="@Model.FirstOrDefault().CityId">
    <input class="form-control" id="bldId" type="hidden" value="@Model.FirstOrDefault().BuildingId">
</div>
<br />
<table class="table" id="tableBuild">

    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CityId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BuildingName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Levels)
        </th>
        <th>
            Upgrade Level
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CityId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BuildingName)
            </td>
            <td class="level">
                @Html.DisplayFor(modelItem => item.Levels)
            </td>
            <td>

                @if (item.GoldCoins > 0)
                {
                    <button class="btn btn-primary btnUpgrade" data-building-id="@item.BuildingId" data-city-id="@item.CityId" id="@("building" + @item.BuildingId)">Upgrade Level ↑</button>
                }
                else
                {
                    <button class="btn btn-primary btnUpgrade disabled" data-building-id="@item.BuildingId" data-city-id="@item.CityId" id="@("building" + @item.BuildingId)">Upgrade Level ↑</button>
                }
            </td>
        </tr>
    }
</table>

<div>
    @Html.ActionLink("← Back to City", "Index", "City", null, new { @class = "btn btn-primary" })
</div>

<script src="@Url.Content("~/Scripts/jquery-1.10.2.js")" type="text/javascript"></script>
<script type="text/javascript">

    var autoRefresh = true;
    var autoRefreshInterval = 1000 * 30;   //mili seconds (set to 5 seconds)
    var count = 0;

    $(document).ready(function () {

        window.setInterval(function () {
            refresh();
        }, 5000);



        function refresh() {
            var cId = $("#cityId").val();
            count++;
            $.ajax({
                type: 'GET',
                data: { CityId: cId },
                url: '@Url.Action("GetCoin", "Building")',
                success: function (result) {
                    //alert(result);
                    if (result <= 0) {
                        $(".btn.btn-primary.btnUpgrade").addClass('disabled');
                        $("#CreateBuld").addClass('disabled');
                    }
                    else {
                        $(".btn.btn-primary.btnUpgrade").removeClass('disabled');
                        $("#CreateBuld").removeClass('disabled');
                    }
                    $("#coinCount").html(result);
                }
            });
        }

        $(".btnUpgrade").click(function () {
            var Bid = $(this).data("building-id");
            var Cid = $(this).data("city-id");
            var level;
            $.ajax({
                type: 'GET',
                data: { CityId: Cid, BuildingId: Bid },
                url: '@Url.Action("UpgradeLevel", "Building")',
                success: function (result) {
                    $("#building" + result.BuildingId).parent().parent().find("td.level").html(result.Levels);
                    refresh();
                }
            });
        }).delay(5000);

    });

</script>