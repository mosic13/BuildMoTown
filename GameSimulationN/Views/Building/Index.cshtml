@model IEnumerable<GameSimulationN.Models.Building>

@{
    ViewBag.Title = "Building";
}

<h2>Building</h2>

<div>
    @*<input class="form-control" id="disabledInput" type="text" >*@
    @*@Html.ActionLink("Add New Building", "Create", "BuildingType", new { BuildingName = Model.FirstOrDefault().CityId }, new { @class = "btn btn-primary" })*@
</div>
<p>
    @Html.ActionLink("Add New Building", "Create", "Building", new { id = Model.FirstOrDefault().CityId }, new { @class = "btn btn-primary" })
</p>
@*@ViewBag.CityId = @Model.FirstOrDefault().CityId ;*@
<div class="clearfix">
    <label class="control-label col-md-1 font-20" for="disabledInput">City: </label>
    <div class="col-lg-3">
        <input class="form-control" id="disabledInput" type="text" placeholder="@Model.FirstOrDefault().CityName" disabled="">
        <input class="form-control" id="cityId" type="text" value="@Model.FirstOrDefault().CityId" style="visibility:hidden">
    </div>
</div>
<br />
<a href="#" class="btn btn-success" id="idCoins">
    Coins
    <img src="~/Content/Coins-icon.png" /> <span id="coinCount" class="badge">@Model.FirstOrDefault().GoldCoins</span>
    @Html.ActionLink("Coinsssss", "GetCoin", "City", new { Model.FirstOrDefault().CityId }, null)

</a>

@*<input id="btnCl" type="button" value="Click me" />*@


<br />

<table class="table">

    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CityId)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.BuildingId)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.BuildingName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Levels)
        </th>
        <th>
            Upgrade Level
        </th>

        @*<th>
                @Html.DisplayNameFor(model => model.ModifyDate)
            </th>*@
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CityId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BuildingName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Levels)
            </td>
            <td>
                @Html.ActionLink("Upgrade Level", "UpgradeLevel", "Building", new { CityId = item.CityId, BuildingId = item.BuildingId }, new { id = "btnUpgrade" + item.BuildingId.ToString(), onclick = "UpgradeLevel(" + item.CityId + "," + item.BuildingId + ")" })
            </td>
        </tr>
    }
</table>

<div>
    @Html.ActionLink("← Back to City", "Index", "City", null, new { @class = "btn btn-primary" })
</div>

<script src="@Url.Content("~/Scripts/jquery-1.10.2.js")" type="text/javascript"></script>
<script type="text/javascript">

    var autoRefresh = true;
    var autoRefreshInterval = 1000 * 300;   //mili seconds (set to 5 seconds)
    var count = 0;

    $(document).ready(function () {

        window.setInterval(function () {
            refresh();
        }, 5000);

        function UpgradeLevel(CityId, BuildingId) {
            $.ajax({
                type: 'GET',
                data: { CityId: 1, BuildingId: 5 },
                url: '@Url.Action("UpgradeLevel", "Building")',
                success: function (result) {
                    //alert("success");
                    $("#coinCount").html(count + ": " + result);
                    coinCount
                    //alert("html result:-" + count + result);
                }
            });
        }

        function refresh() {
            var cId = $("#cityId%>").val();
            count++;
            $.ajax({
                type: 'GET',
                data: { CityId: cId },
                url: '@Url.Action("GetCoin", "Building")',
                success: function (result) {
                    //alert("success");
                    $("#coinCount").html(result);
                    coinCount
                    //alert("html result:-" + count + result);
                }
            });
        }

        @*var refresh = function () {
            if (autoRefresh) {
                debugger;
                $('#idCoins').load('@Url.Action("GetCoin", "City")');
                $('#lbl').innerHtml("refreshing...");
            }

        };

        refresh();*@

    });

</script>